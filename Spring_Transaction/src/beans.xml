<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-autowire="byName" default-lazy-init="true">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:jdbc.properties</value>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--meichao:Congratulations!-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="annotatedClasses">
            <list>
            <value>com.myself.model.User</value>
            <value>com.myself.model.Log</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">
                    org.hibernate.dialect.MySQL5Dialect
                </prop>
                <prop key="hbm2ddl.auto">
                    create-drop
                </prop>
                <!--针对"HibernateException: Could not obtain transaction-synchronized Session"问题-->
                <prop key="hibernate.current_session_context_class">
                    thread
                </prop>
                <!--<prop key="hibernate.current_session_context_class">jta</prop>-->
                <prop key="hibernate.hbm2ddl.auto">
                    create
                </prop>
                <prop key="hibernate.show_sql">
                    true
                </prop>
            </props>
        </property>

    </bean>

    <bean name="user" class="com.myself.impl.UserDAOImpl" init-method="init">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>

    <bean name="log" class="com.myself.impl.LogDAOImpl" init-method="init">
        <property name="dataSource" ref="dataSource"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean name="userService" class="com.myself.service.UserService" scope="prototype" autowire="byType">
        <property name="userDAO" ref="user"/>
        <property name="logDAO" ref="log"/>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!--hibernateDAOSupporty已存在final setSessionFactory()方法不能再注入sessionFactory-->

    <!--sessionFactory注入到TransactionManager-->
    <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager"/>

</beans>
